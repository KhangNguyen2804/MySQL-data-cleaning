-- data cleaning project--
set autocommit = 1;
-- 1. Remove duplicate
-- 2. Standarize the data
-- 3. Null value or blank value
-- 4. Remove any collumn
-- REMOVE DUPLICATE --

create table layoffS_staging
like layoffs;

select *
from layoffs_staging;

insert layoffs_staging
SELECT * FROM layoffs;

SELECT *,
ROW_NUMBER() OVER(
PARTITION BY company,location, industry, total_laid_off, percentage_laid_off, `date`,stage, country, funds_raised_millions) as row_num
FROM layoffs_staging;

WITH duplicate_cte AS (
	SELECT *,
		ROW_NUMBER() OVER(
			PARTITION BY company,location, industry, total_laid_off, percentage_laid_off, `date`,stage, country, funds_raised_millions) as row_num
FROM layoffs_staging
)

SELECT * 
FROM duplicate_cte
WHERE row_num >1;

CREATE TABLE `layoffs_staging2` (
  `company` text,
  `location` text,
  `industry` text,
  `total_laid_off` int DEFAULT NULL,
  `percentage_laid_off` double DEFAULT NULL,
  `date` text,
  `stage` text,
  `country` text,
  `funds_raised_millions` int DEFAULT NULL,
  `row_num` INT
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;

/*
SELECT company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions
FROM layoffs_staging2
WHERE company = 'arc'
GROUP BY company, location, industry, total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions
HAVING COUNT(*) > 1;
*/
SELECT DISTINCT TRIM(company), TRIM(location), TRIM(industry), total_laid_off, percentage_laid_off, `date`, stage, country, funds_raised_millions
FROM layoffs_staging2
WHERE company = 'arc';



INSERT INTO layoffs_staging2
	SELECT *,
		ROW_NUMBER() OVER(
			PARTITION BY company, location, industry, total_laid_off, percentage_laid_off, `date`,stage, country, funds_raised_millions) as row_num
FROM layoffs_staging;

DELETE
FROM layoffs_staging2
WHERE row_num >1;

SELECT * 
FROM layoffs_staging2
WHERE company = 'Casper';


-- Standarizing data --

SELECT company, TRIM(company) -- trim take the white space out of the end
FROM layoffs_staging2;

UPDATE layoffs_staging2
SET company = trim(company); 

SELECT DISTINCT industry
FROM layoffs_staging2;


update layoffs_staging2
set industry = "Crypto"
where industry like 'Crypto%';

select distinct country, trim(TRAILING '.' FROM country)
from layoffs_staging2
order by 1;

update layoffs_staging2
set country = trim(TRAILING '.' FROM country)
WHERE country LIKE 'United State%';

SELECT `date`
FROM layoffs_staging2;

UPDATE layoffs_staging2
SET `date` = STR_TO_DATE(`date`, '%m/%d/%Y'); -- this is the date function that got you wrong
/* the %y refer to (2 digit years format)
 while %Y refer to (4 digit years format) */ 

-- the `date` collumn is still in text format so we change it by altering the table
-- the altering should only be done on a new table
-- remember to check for null values
ALTER TABLE layoffs_staging2
MODIFY COLUMN `date` DATE;

SELECT *
FROM layoffs_staging2;

-- Null Value or Blank Value

SELECT * 
FROM layoffs_staging2
WHERE total_laid_off is null
AND percentage_laid_off is null;

UPDATE layoffs_staging2 
SET industry = NULL  -- turning the blank value into null to deal with one data type at a time
WHERE industry = '';

SELECT *
FROM layoffs_staging2
WHERE industry is null 
or industry = ''; -- '' with no space in between is blank ' ' with space in between is space

SELECT DISTINCT * 
FROM layoffs_staging2
where company LIKE 'bally%';

SELECT t1.industry, t2.industry 
FROM layoffs_staging2 t1
JOIN layoffs_staging2 t2
	ON t1.company = t2.company
    AND t1.location = t2.location
WHERE (t1.industry IS NULL) -- Since the blank value is null we remove this line /* OR t1.industry = '')*/
AND t2.industry IS NOT NULL;

-- Using self join to select the null value column and fill in the value --
UPDATE layoffs_staging2 t1
JOIN layoffs_staging2 t2 
	ON t1.company = t2.company
SET t1.industry = t2.industry
WHERE (t1.industry IS NULL)
AND t2.industry IS NOT NULL;

SELECT  * FROM layoffs_staging2
WHERE total_laid_off IS NULL;

DELETE 
FROM layoffs_staging2 
WHERE total_laid_off IS NULL
AND percentage_laid_off =0;

SELECT * FROM layoffs_staging2;

ALTER TABLE layoffs_staging2
DROP COLUMN row_num;